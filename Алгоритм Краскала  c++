#include <bits/stdc++.h>
using namespace std;

struct Edge {
    int u, v, weight;
    bool operator<(const Edge& other) const {
        return weight < other.weight;
    }
};

int find(vector<int>& parent, int x) {
    if (parent[x] != x) parent[x] = find(parent, parent[x]);
    return parent[x];
}

void unite(vector<int>& parent, int a, int b) {
    a = find(parent, a);
    b = find(parent, b);
    if (a != b) parent[a] = b;
}

int main() {
    int n = 4;
    vector<Edge> edges = {
        {0, 1, 10},
        {0, 2, 6},
        {0, 3, 5},
        {1, 3, 15},
        {2, 3, 4}
    };

    sort(edges.begin(), edges.end());
    vector<int> parent(n);
    for (int i = 0; i < n; i++) parent[i] = i;

    int mstWeight = 0;
    cout << "Ребра в минимальном остовном дереве:\n";
    for (auto& e : edges) {
        if (find(parent, e.u) != find(parent, e.v)) {
            unite(parent, e.u, e.v);
            mstWeight += e.weight;
            cout << e.u << " - " << e.v << " : " << e.weight << "\n";
        }
    }
    cout << "Общий вес MST = " << mstWeight << "\n";
}
